* >Natural Source Header 000000
* :Mode S
* :CP IBM01140
* :LineIncrement 10
* <Natural Source Header
DEFINE DATA
LOCAL USING EMPLOC
LOCAL USING MAPVAR
LOCAL
** 1 EMPL-VIEW VIEW OF EMPLOYEES-SAHOF
1 EMPL-VIEW VIEW OF EMPLOYEES
  2 PERSONNEL-ID
  2 FULL-NAME
    3 FIRST-NAME
    3 NAME
    3 MIDDLE-NAME
  2 MAR-STAT
  2 SEX
* 2 BIRTH
  2 FULL-ADDRESS
    3 ADDRESS-LINE(1:5)
    3 CITY
    3 POST-CODE
    3 COUNTRY
  2 TELEPHONE
    3 AREA-CODE
    3 PHONE
  2 DEPT
  2 JOB-TITLE
  2 INCOME(1:5)
    3 CURR-CODE
    3 SALARY
    3 BONUS(1:5)
  2 LEAVE-DATA
    3 LEAVE-DUE
    3 LEAVE-TAKEN
  2 LEAVE-BOOKED(1:5)
    3 LEAVE-START
    3 LEAVE-END
  2 LANG(1:5)
** 1 HIST-VIEW VIEW OF EMPLOYEES-SAGEW
1 HIST-VIEW VIEW OF EMPLOYEES
  2 PERSONNEL-ID
END-DEFINE
#TITLE1 := '          EMPLOYEE MAINTENANCE'
#TITLE2 := '              ** FILE 71 **'
#PROGRAM := *PROGRAM
#TIME := *TIMX
#VALID-ACTIONS := '(A,D,M,N,P)'
REPEAT-01.
* MOVE EMPL-VIEW Version 15
REPEAT
  RESET #ACTION
  INPUT USING MAP 'EMPMAP'
  IF #ACTION = '.'
    ESCAPE BOTTOM (REPEAT-01.)
  END-IF
  PERFORM READ-EMP
END-REPEAT
DEFINE SUBROUTINE READ-EMP
DECIDE ON FIRST VALUE OF #ACTION
  VALUE 'A'
    FD. HISTOGRAM(1) HIST-VIEW FOR PERSONNEL-ID
        FROM #KEY THRU #KEY
    END-HISTOGRAM
    IF *COUNTER(FD.) NE 0 THEN
      REINPUT
        'EMPLOYEE ALREADY EXISTS'
        MARK *#KEY ALARM
    END-IF
    RESET EMPL-VIEW
    MOVE BY NAME EMPLOC TO EMPL-VIEW
    MOVE #KEY TO EMPL-VIEW.PERSONNEL-ID
    STORE EMPL-VIEW
    END TRANSACTION
    COMPRESS 'EMPLOYEE' EMPL-VIEW.PERSONNEL-ID 'ADDED SUCCESSFULLY'
      INTO #MSG
  VALUE 'D'
    F1.
    FIND (1) EMPL-VIEW WITH PERSONNEL-ID = #KEY
      IF NO RECORDS FOUND
        COMPRESS 'EMPLOYEE' #KEY 'NOT FOUND'
          INTO #MSG
        ESCAPE BOTTOM (F1.)
      END-NOREC
      MOVE BY NAME EMPL-VIEW TO EMPLOC
      MOVE EMPLOC.PERSONNEL-ID TO #KEY
      MOVE *ISN(F1.) TO EMPLOC.#ISN
      COMPRESS 'EMPLOYEE' EMPL-VIEW.PERSONNEL-ID
        'DISPLAYED SUCCESSFULLY' INTO #MSG
    END-FIND
  VALUE 'M'
    IF #KEY NE EMPLOC.PERSONNEL-ID
      REINPUT
        'YOU MUST DISPLAY RECORD BEFORE MODIFY'
        MARK *#KEY ALARM
*     #MSG := 'YOU MUST DISPLAY RECORD BEFORE MODIFY'
    ELSE
      FIND (1) EMPL-VIEW WITH PERSONNEL-ID = #KEY
        IF NO RECORDS FOUND
          #MSG := 'EMPLOYEE RECORD NOT FOUND'
          ESCAPE BOTTOM
        END-NOREC
        MOVE BY NAME EMPLOC TO EMPL-VIEW
        UPDATE
        END TRANSACTION
        COMPRESS 'EMPLOYEE' EMPL-VIEW.PERSONNEL-ID
          'MODIFIED SUCCESSFULLY' INTO #MSG
      END-FIND
    END-IF
  VALUE 'N'
    IF #KEY = ' '
      RN.
      READ (1) EMPL-VIEW BY PERSONNEL-ID STARTING FROM #KEY
        MOVE BY NAME EMPL-VIEW TO EMPLOC
        MOVE EMPLOC.PERSONNEL-ID TO #KEY
        MOVE *ISN(RN.) TO EMPLOC.#ISN
      END-READ
    ELSE
      HISTOGRAM(2) HIST-VIEW FOR PERSONNEL-ID
          STARTING FROM #KEY
        IF HIST-VIEW.PERSONNEL-ID GT #KEY
          FN.
          FIND (1) EMPL-VIEW WITH PERSONNEL-ID = HIST-VIEW.PERSONNEL-ID
            IF NO RECORDS FOUND
              #MSG := 'RECORD NOT FOUND'
              ESCAPE BOTTOM
            END-NOREC
            MOVE BY NAME EMPL-VIEW TO EMPLOC
            MOVE EMPLOC.PERSONNEL-ID TO #KEY
            MOVE *ISN(FN.) TO EMPLOC.#ISN
            COMPRESS 'NEXT EMPLOYEE' EMPL-VIEW.PERSONNEL-ID
              'DISPLAYED SUCCESSFULLY' INTO #MSG
          END-FIND
        ELSE
          #MSG := 'END OF DATA'
        END-IF
      END-HISTOGRAM
    END-IF
  VALUE 'P'
    IF #KEY NE EMPLOC.PERSONNEL-ID
      REINPUT
        'YOU MUST DISPLAY RECORD BEFORE PURGE'
        MARK *#KEY ALARM
**    #MSG := 'YOU MUST DISPLAY RECORD BEFORE PURGE'
    ELSE
      FIND (1) EMPL-VIEW WITH PERSONNEL-ID = #KEY
        IF NO RECORDS FOUND
          #MSG := 'EMPLOYEE RECORD NOT FOUND'
          ESCAPE BOTTOM
        END-NOREC
        RESET EMPLOC #KEY
        DELETE
        END TRANSACTION
        COMPRESS 'EMPLOYEE PURGED SUCCESSFULLY'
          INTO #MSG
      END-FIND
    END-IF
  NONE VALUE
    #MSG := 'INVALID ACTION CODE ENTERED'
END-DECIDE
END-SUBROUTINE
END
